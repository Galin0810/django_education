"""
Напишите программу, которая считывает с консоли числа (по одному в строке) до тех пор,
пока сумма введённых чисел не будет равна 0 и сразу после этого выводит сумму квадратов
всех считанных чисел.
"""

a1 = int(input())
s = a1
s2 = 0+abs(a1**2)
while s != 0:
    a1 = int(input())
    s = s+a1
    s2 = s2+abs(a1)**2
    if s == 0:
        break
print(s2)

"""
Напишите программу, которая выводит часть последовательности 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 ...
(число повторяется столько раз, чему равно). На вход программе передаётся неотрицательное
целое число n — столько элементов последовательности должна отобразить программа. На выходе
ожидается последовательность чисел, записанных через пробел в одну строку.
"""

a = int(input())
m = []
for i in range(a):
    j = 0
    while j < i+1:
        m.append(i+1)
        j += 1
    if len(m) > a:
        break
m = m[0:a]
for i in m:
    print(i, end=" ")

"""
Напишите программу, которая считывает список чисел lst из первой строки и число x из второй строки,
которая выводит все позиции, на которых встречается число x в переданном списке lst. Позиции
нумеруются с нуля, если число x не встречается в списке, вывести строку "Отсутствует" (без кавычек,
с большой буквы). Позиции должны быть выведены в одну строку, по возрастанию абсолютного значения.
"""

s = [int(i) for i in input().split()]
n = int(input())
t = []
l = len(s)-1
if n in s:
    for i in range(0,l+1):
        if s[i] == n:
            t.append(i)
    g = len(t)-1
    for j in range(0, g+1):
        print(t[j], end=' ')
else:
    print('Отсутствует')

"""
Напишите программу, на вход которой подаётся прямоугольная матрица в виде последовательности строк,
заканчивающихся строкой, содержащей только строку "end" (без кавычек) Программа должна вывести
матрицу того же размера, у которой каждый элемент в позиции i, j равен сумме элементов первой
матрицы на позициях (i-1, j), (i+1, j), (i, j-1), (i, j+1). У крайних символов соседний элемент
находится с противоположной стороны матрицы. В случае одной строки/столбца элемент сам себе
является соседом по соответствующему направлению.
"""

n = ''
m = []
while True:
    n = str(input())
    if n == 'end':
        break
    m.append([int(s) for s in n.split()])
li, lj = len(m), len(m[0])
new = [[sum([m[i-1][j], m[(i+1)%li][j], m[i][j-1], m[i][(j+1)%lj]]) for j in range(lj)] for i in range(li)]

for i in range(li):
    for j in range(lj):
        print(new[i][j], end=' ')
    print

"""
Выведите таблицу размером n×n, заполненную числами от 1 до n2 по спирали,
выходящей из левого верхнего угла и закрученной по часовой стрелке, как показано в примере
(здесь n=5):
"""


def spiral(n):
    dx, dy = 1, 0
    x, y = 0, 0
    my_array = [[None] * n for j in range(n)]
    for i in range(1, n ** 2 + 1):
        my_array[x][y] = i
        nx, ny = x + dx, y + dy
        if 0 <= nx < n and 0 <= ny < n and my_array[nx][ny] == None:
            x, y = nx, ny
        else:
            dx, dy = -dy, dx
            x, y = x + dx, y + dy
    return my_array


def print_spiral(my_array):
    n = range(len(my_array))
    for y in n:
        for x in n:
            print(my_array[x][y], end=' ')
        print()


n = int(input())
print_spiral(spiral(n))

