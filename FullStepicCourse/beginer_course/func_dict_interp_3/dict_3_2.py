"""
Напишите функцию update_dictionary(d, key, value), которая принимает на вход словарь d и два числа:
key и value. Если ключ key есть в словаре d, то добавьте значение value в список, который хранится
по этому ключу. Если ключа key нет в словаре, то нужно добавить значение в список по ключу 2⋅key.
Если и ключа 2⋅key нет, то нужно добавить ключ 2⋅key в словарь и сопоставить ему список из переданного элемента [value].
Требуется реализовать только эту функцию, кода вне неё не должно быть.
Функция не должна вызывать внутри себя функции input и print.
"""

# не добавляйте кода вне функции
def update_dictionary(d, key, value):
    # put your python code here
    if key in d:
            d[key].append(value)
            #print('ключ є')
    elif key is not d:
            #d[2*key]=[]
            if 2*key is d:
                d[2*key].append(value)
                #print('ключ 2*key уже є')
            elif (2*key is not d) and d.get(2*key)==None:
                    d[2*key]=[]
                    d[2*key].append(value)
            #print('створення ключа и + нове значення списку')
            elif (2*key is not d) and d.get(2*key)!=None:
                d[2*key].append(value)
    return

"""
Программа должна считывать одну строку со стандартного ввода и выводить для каждого уникального
слова в этой строке число его повторений (без учёта регистра) в формате "слово количество"
(см. пример вывода). Порядок вывода слов может быть произвольным, каждое уникальное слово﻿
должно выводиться только один раз.
"""

n=''
n = str(input())
m = []
m.append([str(s.lower()) for s in n.split()])
d = {}
li, lj = len(m), len(m[0])
for i in range(li):
    for j in range(lj):
        p = m[i][j]
        if p in d:
            d[p]+=1
        else:
            d[p] = 1
for key,value in d.items():
   print(key,value)

"""
Напишите программу, которой на вход в первой строке подаётся число n — количество значений x,
для которых требуется узнать значение функции f(x), после чего сами эти n значений, каждое на
отдельной строке. Программа должна после каждого введённого значения аргумента вывести
соответствующие значения функции f на отдельной строке. Для ускорения вычисления необходимо
сохранять уже вычисленные значения функции при известных аргументах.
"""
# Считайте, что функция f(x) уже определена выше. Определять её отдельно не требуется.
d = {}
k = []
n = int(input())
for i in range(n):
    x = int(input())
    k.append(x)
for j in range(0,len(k)):
    key = k[j]
    if key in d:
        print(d[key])
    elif key not in d:
        p = k[j]
        #d[key]=f(p)
        print(d.get(key))
